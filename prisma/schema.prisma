generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Fornecedor {
  idFornecedor Int       @id @default(autoincrement())
  dsFornecedor String?   @db.VarChar(45)
  produto      Produto[]
}

model Funcionario {
  idFuncionario Int     @id @default(autoincrement())
  dsFuncionario String? @db.VarChar(45)
  nrCpf         String? @db.VarChar(45)
  dsSenha       String? @db.VarChar(50)
  dsFuncao      String? @db.VarChar(50)
  venda         Venda[]
}

model Item {
  idItem    Int      @id @default(autoincrement())
  qtItem    Int?
  vlParcial Decimal? @db.Decimal(7, 2)
  idProduto Int?
  idVenda   Int?
  produto   Produto? @relation(fields: [idProduto], references: [idProduto], onDelete: NoAction, onUpdate: NoAction)
  venda     Venda?   @relation(fields: [idVenda], references: [idVenda], onDelete: NoAction, onUpdate: NoAction)
}

model Produto {
  idProduto    Int         @id @default(autoincrement())
  dsProduto    String?     @db.VarChar(45)
  vlProduto    Decimal?    @db.Decimal(7, 2)
  qtProduto    Int?
  idFornecedor Int?
  item         Item[]
  fornecedor   Fornecedor? @relation(fields: [idFornecedor], references: [idFornecedor], onDelete: NoAction, onUpdate: NoAction)
}

model Venda {
  idVenda       Int          @id @default(autoincrement())
  dtVenda       DateTime?    @db.Timestamp(6)
  vlTotal       Decimal?     @db.Decimal(7, 2)
  idFuncionario Int?
  item          Item[]
  funcionario   Funcionario? @relation(fields: [idFuncionario], references: [idFuncionario], onDelete: NoAction, onUpdate: NoAction)
}
